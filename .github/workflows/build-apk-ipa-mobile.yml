name: Build APK for Flet App

on:
  push:
    branches:
      - main

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    # Step 3: Install Python Dependencies
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cython
        pip install -r requirements.txt

    # Step 4: Install Android SDK (Non-Sudo)
    - name: Install Android SDK
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
      env:
        PATH: $HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH

    # Step 5: Accept Android SDK Licenses
    - name: Accept Android SDK Licenses
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
        yes | sdkmanager --licenses

    # Step 6: Install Buildozer
    - name: Install Buildozer
      run: |
        pip install buildozer

    # Step 7: Initialize Buildozer
    - name: Initialize Buildozer
      run: |
        buildozer init

    # Step 8: Build APK
    - name: Build APK
      run: |
        buildozer -v android debug
        mkdir -p build-output
        cp bin/*.apk build-output/

    # Step 9: Upload APK
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: build-output/*.apk
